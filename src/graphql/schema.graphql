# schema.graphql

input StringFieldUpdateOperationsInput {
  set: String
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BooksUpdateInput {
  id: StringFieldUpdateOperationsInput
  image: StringFieldUpdateOperationsInput
  link: StringFieldUpdateOperationsInput
  pages: StringFieldUpdateOperationsInput
  readedPages: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  finished: BoolFieldUpdateOperationsInput
  translations: [BooksTranslationsUpdateManyWithoutBooksInput]
}

input BooksTranslationsUpdateManyWithoutBooksInput {
  update: [BooksTranslationsUpdateWithWhereUniqueWithoutBooksInput]
  upsert: [BooksTranslationsUpsertWithWhereUniqueWithoutBooksInput]
}

input BooksTranslationsUpdateWithWhereUniqueWithoutBooksInput {
  where: BooksTranslationsWhereUniqueInput
  data: BooksTranslationsUpdateWithoutBooksDataInput
}

input BooksTranslationsUpsertWithWhereUniqueWithoutBooksInput {
  where: BooksTranslationsWhereUniqueInput
  update: BooksTranslationsUpdateWithoutBooksDataInput
  create: BooksTranslationsCreateWithoutBooksInput
}

input BooksTranslationsUpdateWithoutBooksDataInput {
  title: StringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  author: StringFieldUpdateOperationsInput
}

input BooksTranslationsCreateWithoutBooksInput {
  title: String
  description: String
  author: String
  languageCode: String
}

input BooksWhereUniqueInput {
  id: String
}

type Mutation {
  createBook(data: CreateBookInput!): Book
  deleteOneBooks(where: BooksWhereUniqueInput!): Book
  updateOneBooks(data: BooksUpdateInput!, where: BooksWhereUniqueInput!): Book
}

type Book {
  id: String
  image: String
  link: String
  pages: Int
  readedPages: Int
  type: String
  finished: Boolean
  translations: [BookTranslation]
}

type BookTranslation {
  id: String
  title: String
  description: String
  author: String
  languageCode: String
}

input CreateBookInput {
  image: String
  link: String
  pages: Int
  readedPages: Int
  type: String
  finished: Boolean
  translations: [BooksTranslationsCreateWithoutBooksInput]
}
